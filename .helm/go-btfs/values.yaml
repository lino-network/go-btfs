name: go-btfs
nameOverride: ""
fullnameOverride: ""
service:
  type: ClusterIP
  port: 80
virtualservice:
  attempts: 3
  perTryTimeout: 10s
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 1000m
    memory: 1Gi
extraEnv: {}
extraData: {}
serviceAnnotations: {}
deploymentAnnotations: {}
readiness:
  # Readiness prob is highly recommended
  enabled: true
  path: /
  port: 5001
  delay: 0
  period: 10
  timeoutSeconds: 5
liveness:
  # Liveliness prob is highly recommended
  enabled: true
  path: /
  port: 5001
  delay: 300
  period: 10
  timeoutSeconds: 5
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: component
            operator: In
            values: 
            - "go-btfs"
        topologyKey: kubernetes.io/hostname
ports:
  # Any ports that you are exposed for other service, or health check purpose
- name: swarm
  containerPort: 4001
  protocol: TCP
- name: api
  containerPort: 5001
  protocol: TCP
- name: gateway
  containerPort: 8080
  protocol: TCP
- name: remote-api
  containerPort: 5101
  protocol: TCP

ingress:
  name: go-btfs-ingress-external
  ingressClass: nginx-external
  domains:
    - name: playback-btfs.stg.dlive.tv
  secretName: go-btfs-tls

upstreamHash:
  enabled: false

replicaCount: 1
maxSurge: 1
maxUnavailable: 0
strategyType: RollingUpdate
image:
  repository: "726332586568.dkr.ecr.eu-west-1.amazonaws.com/go-btfs"
  tag: "f71e12c7c1a9b6177b98520d202152e901ab4f21"
  pullPolicy: IfNotPresent
autoscaler:
  minReplicas: 1
  maxReplicas: 2
  resourceName: cpu
  targetAverageUtilization: 65
  targetAverageMemoryUtilization: 80

persistent:
  # set at least `500Gi` in PRD, `sc1` doesn't allow less than 500Gi
  storage: 10Gi
  # set to `sc1` in PRD
#  storageClassName: sc1
#  storageClassParams:
#    fsType: ext4
#    type: sc1
  storageClassName: gp2
  storageClassParams:
    type: gp2
volumeMounts:
  - name: data-volume
    mountPath: /data
    readOnly: false
volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: go-btfs

containerArgs: []
