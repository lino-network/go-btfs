apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "go-btfs.fullname" }}
  labels:
    app: {{ include "go-btfs.name" . }}
    chart: {{ include "go-btfs.chart" . }}
    component: "{{ .Values.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ include "go-btfs.name" . }}
      component: "{{ .Values.name }}"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app : {{ include "go-btfs.name" }}
        component: {{ .Values.name }}
        release: {{ .Release.Name }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: {{ include "go-btfs.name" }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.readiness.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.readiness.port }}
            initialDelaySeconds: {{ .Values.readiness.delay }}
            periodSeconds: {{ .Values.readiness.period }}
            timeoutSeconds: {{ .Values.readiness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.liveness.port }}
            initialDelaySeconds: {{ .Values.liveness.delay }}
            periodSeconds: {{ .Values.liveness.period }}
            timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.ports }}
          ports:
            {{- range $key, $value := .Values.ports }}
            - name: {{ $value.name }}
              containerPort: {{ $value.containerPort }}
              protocol: {{ $value.protocol }}
          {{- end }}
          {{- end }}
          {{- if .Values.containerArgs }}
          args: {{ .Values.containerArgs }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- range $key, $_ := $.Values.goBtfsSecrets }}
            - name: {{ $key | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "go-btfs.fullname" $ }}
                  key: {{ $key }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "go-btfs.fullname" . }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
            {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath | quote }}
              readOnly: {{ .readOnly }}
            {{- end }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
{{ toYaml . | indent 6 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistent.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.persistent.storage }}