variables:
  REPO_NAME: github.com/lino-network/go-btfs
  ECR_NAME: go-btfs
  CHART_NAME: go-btfs
  COMMIT_SHA: ${CI_COMMIT_SHA}
  TAG: ${CI_COMMIT_TAG}
  LIVESTREAM_CHART_NAME: livestream
  LINOAPP_DOOR_CHART_NAME: linoapp-door

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

  # install github ssh keys
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

stages:
  - docker
  - helm
  - release

docker:prd:
  retry:
    max: 2
    when: runner_system_failure
  stage: docker
  only:
    - tags
  tags:
    - kubernetes
  image: linonetwork/gitlab-stage-docker:v0.1.11
  script:
    - eval $(aws ecr get-login --no-include-email --region eu-west-1)
    # if extra arg needed for docker build step, pass in 4th arg
    - docker.sh ${REPOSITORY} ${ECR_NAME} ${TAG} "" "prd" "Dockerfile"
    # add DOCKER_TAG env variable to variables
    - touch variables
    - echo "export DOCKER_TAG=${TAG}" >> variables
  artifacts:
    paths:
      - variables

docker:stg:
  stage: docker
  only:
    - dlive_release
  except:
    - tags
  tags:
    - kubernetes
  image: linonetwork/gitlab-stage-docker:v0.1.4
  script:
    - eval $(aws ecr get-login --no-include-email --region eu-west-1)
    - DOCKER_BUILD_ARGS=""
    - docker.sh ${REPOSITORY} ${ECR_NAME} ${COMMIT_SHA} ${DOCKER_BUILD_ARGS}
    # add DOCKER_TAG env variable to variables
    - touch variables
    - echo "export DOCKER_TAG=${COMMIT_SHA}" >> variables
  artifacts:
    paths:
      - variables

helm:
  only:
    - tags
    - dlive_release
  tags:
    - kubernetes
  stage: helm
  image: linonetwork/gitlab-stage-helm:v0.1.16
  script:
    # read DOCKER_TAG env variable from helm release stage
    - source variables
    
    - CHART_VERSION=$(version.sh $CHART_NAME $CI_COMMIT_SHA $CHART_REPO $CI_COMMIT_TAG)
    - chart.sh $CHART_NAME $CI_COMMIT_SHA $CHART_REPO $CI_COMMIT_TAG
    
    # add CHART_VERSION env variable to variables, which should already contain DOCKER_TAG
    - echo "export CHART_VERSION=$CHART_VERSION" >> variables
  dependencies:
    - docker:stg
    - docker:prd
  artifacts:
    paths:
      - variables

release:stg:
  stage: release
  only:
    - dlive_release
  except:
    - tags
  tags:
    - kubernetes
  image: linonetwork/gitlab-stage-release-stg:v0.1.23
  environment:
    name: staging/$CI_COMMIT_REF_NAME
    url: https://github.com/lino-network/kube-app/commits/master
  script:
    # read CHART_VERSION/DOCKER_TAG env variable from helm build
    - source variables
    - pull.sh
    
    # update staging env, replace LINOAPP_CHART_NAME to JOBS_CHART_NAME if deploy cronjob
#    - release.sh $REPO_NAME $CHART_NAME $ECR_NAME $CHART_VERSION $DOCKER_TAG $REPOSITORY $LINOAPP_CHART_NAME
    - patch_value.sh $CHART_NAME $DOCKER_TAG $LINOAPP_DOOR_CHART_NAME
    - ([[ ! -z "$CHART_VERSION" ]]) && patch_chart.sh $CHART_NAME $CHART_VERSION $LINOAPP_DOOR_CHART_NAME
    - push.sh $CHART_NAME $ECR_NAME $DOCKER_TAG $REPOSITORY
  dependencies:
    - helm

release:prd:
  retry:
    max: 2
    when: runner_system_failure
  stage: release
  only:
    - tags
  tags:
    - kubernetes
  image: linonetwork/gitlab-stage-release-prd-stream:v0.0.1
  environment:
    name: production
    url: https://github.com/lino-network/kube-stream-core/pulls
  script:
    # read CHART_VERSION/DOCKER_TAG env variable from helm build
    - source variables
    # promote production env, replace LIVESTREAM_CHART_NAME to JOBS_CHART_NAME if deploy cronjob
    - release.sh $REPO_NAME $CHART_NAME $ECR_NAME $CHART_VERSION $DOCKER_TAG $REPOSITORY $LIVESTREAM_CHART_NAME
  dependencies:
    - helm
